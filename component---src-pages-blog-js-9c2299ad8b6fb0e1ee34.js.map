{"version":3,"file":"component---src-pages-blog-js-9c2299ad8b6fb0e1ee34.js","mappings":"uJAMA,MAAMA,E,OAAkBC,GAsCxB,IApCeC,KACb,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAYhC,OACEC,EAAAA,cAAA,OAAKC,UAAU,kBACZN,EAAgBO,KAAI,CAACC,EAAMC,IACtBD,EAAKE,WAELL,EAAAA,cAACM,EAAiB,CAACC,IAAKH,GACtBJ,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAIN,EAAKO,IAAKC,OAAO,SAASC,IAAI,uBACrCT,EAAKU,QAOZb,EAAAA,cAAA,OAAKC,UAAU,OAAOM,IAAKH,GACzBJ,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAIN,EAAKO,KAAMP,EAAKU,UAI5B,EAMV,MAQMP,EAAoBQ,IAAmB,IAAlB,SAAEC,GAAUD,EACrC,OAAOd,EAAAA,cAAA,WAAMe,EAAe,C,6CCzB9B,IA3BeC,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEH,GAAUC,EAmB3C,OACEhB,EAAAA,cAAA,OAAKC,UAAU,kBAEbD,EAAAA,cAAA,YAAOe,GACH,C,uFC1BV,EAAe,IAA0B,0DCoCzC,MA9BaI,KACX,MAAMC,EAAWC,EAAAA,GACjB,OACErB,EAAAA,cAACsB,EAAAA,YAAW,CACVC,MAAK,aASLC,OAAQC,GAEJzB,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAG,KACNW,EACCpB,EAAAA,cAAA,UAAKoB,GAELpB,EAAAA,cAAA,OAAK0B,IAAKC,EAAS1B,UAAU,WAAW2B,IAAI,eAMtD,C,mFCAN,UA1BaZ,IAAe,IAAd,KAAES,GAAMT,EACpB,MAAMa,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE/B,EAAAA,cAACgC,EAAAA,EAAM,CAACd,MAAM,QACZlB,EAAAA,cAACH,EAAAA,EAAM,MACPG,EAAAA,cAACmB,EAAAA,EAAI,MACLnB,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UACG6B,EAAM3B,KAAI,CAAC+B,EAAMC,IAEdlC,EAAAA,cAAA,MAAIO,IAAK2B,GACPlC,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAK,GAAEwB,EAAKE,OAAOC,QACvBpC,EAAAA,cAAA,UAAKiC,EAAKI,YAAYnB,OACtBlB,EAAAA,cAAA,SAAIiC,EAAKI,YAAYC,YAO1B,C","sources":["webpack://gatsby-starter-blog/./src/components/header.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/images/gatsby-icon.png","webpack://gatsby-starter-blog/./src/components/logo.js","webpack://gatsby-starter-blog/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport setting from \"/src/utils/customizing-setting\"\n\nconst HEADER_NAV_ITEM = setting.pages\n\nconst Header = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <div className=\"page-container\">\n      {HEADER_NAV_ITEM.map((item, index) => {\n        if (item.isExternal) {\n          return (\n            <HeaderNavListItem key={index}>\n              <Link to={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {item.label}\n              </Link>\n            </HeaderNavListItem>\n          )\n        }\n\n        return (\n          <div className=\"page\" key={index}>\n            <Link to={item.url}>{item.label}</Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Header\n\nconst HeaderNavList = ({ children }) => {\n  return (\n    <div>\n      <div>{children}</div>\n    </div>\n  )\n}\n\nconst HeaderNavListItem = ({ children }) => {\n  return <div>{children}</div>\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","export default __webpack_public_path__ + \"static/gatsby-icon-8fb027d91d1fd0bc7fe0eb613a8e7a8d.png\";","import { StaticQuery, Link, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport customizing from \"../utils/customizing-setting.json\"\nimport logoImg from \"../images/gatsby-icon.png\"\n\nconst Logo = () => {\n  const logoText = customizing.logo\n  return (\n    <StaticQuery\n      query={graphql`\n        query TitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <div className=\"logo-container\">\n            <Link to=\"/\">\n              {logoText ? (\n                <h3>{logoText}</h3>\n              ) : (\n                <img src={logoImg} className=\"logo-img\" alt=\"logoImg\" />\n              )}\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default Logo\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Logo from \"../components/logo\"\nimport Header from \"../components/header\"\n\nconst Blog = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout title=\"Blog\">\n      <Header />\n      <Logo />\n      <div>\n        <h1>Blog</h1>\n        <ol>\n          {posts.map((node, i) => {\n            return (\n              <li key={i}>\n                <Link to={`${node.fields.slug}`}>\n                  <h2>{node.frontmatter.title}</h2>\n                  <p>{node.frontmatter.date}</p>\n                </Link>\n              </li>\n            )\n          })}\n        </ol>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const homePageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { contentType: { eq: \"blog\" } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          title\n        }\n      }\n    }\n  }\n`\n"],"names":["HEADER_NAV_ITEM","setting","Header","site","useStaticQuery","React","className","map","item","index","isExternal","HeaderNavListItem","key","Link","to","url","target","rel","label","_ref2","children","_ref","location","title","Logo","logoText","customizing","StaticQuery","query","render","data","src","logoImg","alt","posts","allMarkdownRemark","nodes","Layout","node","i","fields","slug","frontmatter","date"],"sourceRoot":""}